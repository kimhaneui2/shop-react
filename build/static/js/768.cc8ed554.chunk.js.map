{"version":3,"file":"static/js/768.cc8ed554.chunk.js","mappings":"uMAMgBA,EAAAA,GAAAA,OAAH,+DACI,SAAAC,GAAK,OAAEA,EAAMC,EAAR,IAGZF,EAAAA,GAAAA,IAAH,2DAmEP,UA9DA,SAAgBC,IACJE,EAAAA,EAAAA,KAAY,SAACC,GAAS,OAAOA,CAAM,IAA3C,IACIC,GAAWC,EAAAA,EAAAA,MACf,GAAwBC,EAAAA,EAAAA,WAAS,GAAjC,eAAKC,EAAL,KAAYC,EAAZ,KACA,GAAoBF,EAAAA,EAAAA,UAAS,IAA7B,eAAKG,EAAL,KACA,GADA,MACwBH,EAAAA,EAAAA,UAAS,IAAjC,eAAKI,EAAL,KAAYC,EAAZ,KACA,GAAsBL,EAAAA,EAAAA,UAAS,IAA/B,eAAKM,EAAL,KAAWC,EAAX,KACKC,GAAMC,EAAAA,EAAAA,MAAND,GACDE,EAAQhB,EAAMgB,MAAMC,MAAK,SAACC,GAAD,OAAKA,EAAEJ,GAAKA,CAAZ,IAmB7B,OAjBAK,EAAAA,EAAAA,YAAU,WACN,IAAIC,EAAOC,aAAaC,QAAQ,SAChCF,EAAOG,KAAKC,MAAMJ,IAAS,IACtBK,KAAKT,EAAMU,OAChBN,GAAI,OAAO,IAAIO,IAAIP,IACnBC,aAAaO,QAAQ,OAAQL,KAAKM,UAAUT,GAC/C,GAAC,KACFD,EAAAA,EAAAA,YAAU,WAKN,OAJiB,GAAdW,MAAMrB,IACLF,EAAM,wCAEVwB,YAAW,WAAMvB,GAAS,GAAQK,EAAQ,QAAU,GAAE,KAChD,WACNA,EAAQ,GACP,CACJ,GAAC,CAACJ,KAGC,iBAAKuB,UAAU,YAAf,UAEa,GAATzB,GACE,gBAAKyB,UAAW,0BAA4BpB,EAA5C,iEAGA,KAELF,GACD,mBAAQuB,QAAS,WAAKtB,EAASD,EAAQ,EAAG,EAA1C,qBAEA,kBAAOwB,KAAK,OAAOC,SAAU,SAACC,GACE,GAAzBN,MAAMM,EAAEC,OAAOC,QACd/B,EAAM,uCAGb,KACD,iBAAKyB,UAAU,MAAf,WACI,gBAAKA,UAAU,WAAf,UACA,gBAAKO,IAAI,iDAAiDC,MAAM,YAEhE,iBAAKR,UAAU,WAAf,WACA,eAAIA,UAAU,OAAd,SAAsBhB,EAAMU,SAC5B,uBAAIV,EAAMyB,WACV,uBAAIzB,EAAM0B,SACV,mBAAQV,UAAU,iBAAiBC,QAAS,WACxC7B,GAASuC,EAAAA,EAAAA,IAAQ3B,GACpB,EAFD,8CAOX,C","sources":["routes/Detail.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\"\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components';\nimport addItem from '../store'\n\nlet yellowBtn = styled.button`\n    backgroud: ${props=>props.bg};\n    color: black\n`\nlet Box = styled.div`\n  padding : 20px;\n  color : grey\n`;\n\nfunction Detail(props){\n    let a = useSelector((state)=>{return state})\n    let dispatch = useDispatch()\n    let [alert, setAlert] = useState(true)\n    let [num, setNum] = useState('')\n    let [count, setCount] = useState(0)\n    let [fade, setFade] = useState('')\n    let {id} = useParams()\n    let shoes = props.shoes.find((x)=>x.id = id)\n\n    useEffect(()=>{\n        let list = localStorage.getItem('data');\n        list = JSON.parse(list) || []\n        list.push(shoes.title);\n        list = [...new Set(list)]\n        localStorage.setItem('data', JSON.stringify(list))\n    },[])\n    useEffect(()=>{\n        if(isNaN(num) == true){\n            alert('그러지마세요')\n        }\n        setTimeout(()=>{ setAlert(false); setFade('start') }, 2000)\n        return()=>{\n        setFade('') //clean up function\n        }\n    },[num])\n    \n    return(\n        <div className=\"container\">\n        {\n            alert == true\n            ? <div className={\"alert alert-warning end\" + fade}>\n                2초이내 구매시 할인\n            </div>\n            : null\n        }\n        {count}\n        <button onClick={()=>{setCount(count + 1)}}>button</button>\n        {/* <yellowBtn bg=\"blue\">btn</yellowBtn> */}\n        <input type=\"text\" onChange={(e)=>{\n            if(isNaN(e.target.value) == true){\n                alert('그러지마세요')\n            }\n            // setNum(e.target.value)\n        }}/>\n        <div className=\"row\">\n            <div className=\"col-md-6\">\n            <img src=\"https://codingapple1.github.io/shop/shoes1.jpg\" width=\"100%\" />\n            </div>\n            <div className=\"col-md-6\">\n            <h4 className=\"pt-5\">{shoes.title}</h4>\n            <p>{shoes.content}</p>\n            <p>{shoes.price}</p>\n            <button className=\"btn btn-danger\" onClick={()=>{\n                dispatch(addItem(shoes))\n            }}>주문하기</button> \n            </div>\n        </div>\n        </div> \n    )\n}\n\nexport default Detail"],"names":["styled","props","bg","useSelector","state","dispatch","useDispatch","useState","alert","setAlert","num","count","setCount","fade","setFade","id","useParams","shoes","find","x","useEffect","list","localStorage","getItem","JSON","parse","push","title","Set","setItem","stringify","isNaN","setTimeout","className","onClick","type","onChange","e","target","value","src","width","content","price","addItem"],"sourceRoot":""}